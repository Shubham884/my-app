{"ast":null,"code":"var _jsxFileName = \"/home/sk/my-app/src/components/LoginPage.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport * as actionTypes from '../store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleEmail = emailVal => {\n      onEmailSave(emailVal);\n    };\n\n    this.handlePas = pasVal => {\n      tonPasSave(pasVal);\n    };\n\n    this.submitForm = () => {\n      const {\n        email,\n        pas,\n        history\n      } = this.props;\n\n      if (email != '' && pas !== '') {\n        history.replace('/home');\n      }\n    };\n  }\n\n  render() {\n    const {\n      email,\n      pas\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        onSubmit: () => this.submitForm(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            autoComplete: \"off\",\n            value: email,\n            onChange: e => this.handleEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"passwrod\",\n            id: \"password\",\n            autoComplete: \"off\",\n            value: pas,\n            onChange: e => this.handlePas(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    email: state.emailReducer.userEmail,\n    pas: state.passReducer.userPas\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onPasSave: pas => {\n      dispatch({\n        type: actionTypes.Password,\n        payload: pas\n      });\n    },\n    onEmailSave: email => {\n      dispatch({\n        type: actionTypes.Email,\n        payload: email\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(LoginPage));","map":{"version":3,"sources":["/home/sk/my-app/src/components/LoginPage.js"],"names":["React","Component","Fragment","connect","withRouter","actionTypes","LoginPage","handleEmail","emailVal","onEmailSave","handlePas","pasVal","tonPasSave","submitForm","email","pas","history","props","replace","render","e","target","value","mapStateToProps","state","emailReducer","userEmail","passReducer","userPas","mapDispatchToProps","dispatch","onPasSave","type","Password","payload","Email"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom'\nimport * as actionTypes from '../store/actions'\n\n\nclass LoginPage extends Component {\n\n  handleEmail = (emailVal) => {\n    onEmailSave(emailVal)\n  }\n\n  handlePas = (pasVal) => {\n    tonPasSave(pasVal)\n  }\n\n  submitForm = () => {\n    const { email, pas, history } = this.props\n    if (email != '' && pas !== '') {\n      history.replace('/home')\n    }\n  }\n\n  render() {\n    const { email, pas } = this.props\n    return (\n      <Fragment>\n        <form action=\"\" onSubmit={() => this.submitForm()}>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              autoComplete=\"off\"\n              value={email}\n              onChange={(e) => this.handleEmail(e.target.value)}\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"passwrod\"\n              id=\"password\"\n              autoComplete=\"off\"\n              value={pas} onChange={(e) => this.handlePas(e.target.value)}\n              required\n            />\n          </div>\n\n          <button type=\"submit\">Login</button>\n        </form>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    email: state.emailReducer.userEmail,\n    pas: state.passReducer.userPas\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onPasSave: (pas) => {\n      dispatch({\n        type: actionTypes.Password,\n        payload: pas\n      })\n    },\n    onEmailSave: (email) => {\n      dispatch({\n        type: actionTypes.Email,\n        payload: email\n      })\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(LoginPage));\n\n"]},"metadata":{},"sourceType":"module"}