{"ast":null,"code":"var _jsxFileName = \"/home/sk/my-app/src/components/TaskPage.js\";\nimport React, { Component, Fragment } from \"react\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TaskPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      taskData: []\n    };\n\n    this.addTaskHandler = () => {\n      const {\n        taskData\n      } = this.state;\n      const taskDataCopied = [...taskData];\n      const lengthVal = taskDataCopied.length;\n      const newTaskId = taskDataCopied[lengthVal - 1].id + 1;\n      const newTaskObj = {\n        userId: 1,\n        id: newTaskId,\n        title: `Nimap Test ${newTaskId}`,\n        completed: false\n      };\n      taskDataCopied.push(newTaskObj);\n      this.setState({\n        taskData: taskDataCopied\n      });\n    };\n\n    this.delTaskHandler = id => {\n      const {\n        taskData\n      } = this.state;\n      const taskDataCopied = [...taskData];\n      const newData = taskDataCopied.filter(item => item.id !== id);\n      this.setState({\n        taskData: newData\n      });\n    };\n  }\n\n  async componentDidMount() {\n    // const lsEmail = JSON.parse(localStorage.getItem('email')) \n    const lsEmail = localStorage.getItem('email');\n    const lsPas = localStorage.getItem('pas');\n    this.props.onEmailSave(lsEmail);\n    this.props.onPasSave(pasVal);\n    console.log('lsEmail', lsEmail);\n    const {\n      email,\n      pas,\n      history\n    } = this.props;\n    console.log('email, pas, history', email, pas, history); // if (email != '' && pas !== '') {\n    //   const taskRes = await fetch(\n    //     \"http://jsonplaceholder.typicode.com/todos\"\n    //   ).then((response) => response.json());\n    //   this.setState({ taskData: taskRes.splice(0, 3) });\n    // } else {\n    //   history.replace('/login')\n    // }\n\n    const taskRes = await fetch(\"http://jsonplaceholder.typicode.com/todos\").then(response => response.json());\n    this.setState({\n      taskData: taskRes.splice(0, 3)\n    });\n  }\n\n  render() {\n    const {\n      taskData\n    } = this.state;\n\n    const btnDel = id => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.delTaskHandler(id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 14\n      }, this);\n    };\n\n    const dispData = taskData.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.completed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: btnDel(item.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: dispData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.addTaskHandler(),\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    email: state.emailReducer.userEmail,\n    pas: state.passReducer.userPas\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onPasSave: pas => {\n      dispatch({\n        type: actionTypes.Password,\n        payload: pas\n      });\n    },\n    onEmailSave: email => {\n      dispatch({\n        type: actionTypes.Email,\n        payload: email\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(TaskPage));","map":{"version":3,"sources":["/home/sk/my-app/src/components/TaskPage.js"],"names":["React","Component","Fragment","Navbar","connect","withRouter","TaskPage","state","taskData","addTaskHandler","taskDataCopied","lengthVal","length","newTaskId","id","newTaskObj","userId","title","completed","push","setState","delTaskHandler","newData","filter","item","componentDidMount","lsEmail","localStorage","getItem","lsPas","props","onEmailSave","onPasSave","pasVal","console","log","email","pas","history","taskRes","fetch","then","response","json","splice","render","btnDel","dispData","map","mapStateToProps","emailReducer","userEmail","passReducer","userPas","mapDispatchToProps","dispatch","type","actionTypes","Password","payload","Email"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom'\n\n\nclass TaskPage extends Component {\n  state = {\n    taskData: []\n  };\n  async componentDidMount() {\n    // const lsEmail = JSON.parse(localStorage.getItem('email')) \n    const lsEmail = localStorage.getItem('email')\n    const lsPas = localStorage.getItem('pas')\n    this.props.onEmailSave(lsEmail)\n    this.props.onPasSave(pasVal)\n    console.log('lsEmail', lsEmail)\n    const { email, pas, history } = this.props\n    console.log('email, pas, history', email, pas, history)\n    // if (email != '' && pas !== '') {\n    //   const taskRes = await fetch(\n    //     \"http://jsonplaceholder.typicode.com/todos\"\n    //   ).then((response) => response.json());\n    //   this.setState({ taskData: taskRes.splice(0, 3) });\n    // } else {\n    //   history.replace('/login')\n    // }\n\n    const taskRes = await fetch(\n      \"http://jsonplaceholder.typicode.com/todos\"\n    ).then((response) => response.json());\n    this.setState({ taskData: taskRes.splice(0, 3) });\n  }\n  addTaskHandler = () => {\n    const { taskData } = this.state;\n    const taskDataCopied = [...taskData];\n    const lengthVal = taskDataCopied.length;\n    const newTaskId = taskDataCopied[lengthVal - 1].id + 1;\n    const newTaskObj = {\n      userId: 1,\n      id: newTaskId,\n      title: `Nimap Test ${newTaskId}`,\n      completed: false\n    };\n    taskDataCopied.push(newTaskObj);\n    this.setState({ taskData: taskDataCopied });\n  };\n  delTaskHandler = (id) => {\n    const { taskData } = this.state;\n    const taskDataCopied = [...taskData];\n    const newData = taskDataCopied.filter((item) => item.id !== id);\n    this.setState({ taskData: newData });\n  };\n  render() {\n    const { taskData } = this.state;\n    const btnDel = (id) => {\n      return <button onClick={() => this.delTaskHandler(id)}>Delete</button>;\n    };\n    const dispData = taskData.map((item) => {\n      return (\n        <tr key={item.id}>\n          <td>{item.id}</td>\n          <td>{item.title}</td>\n          <td>{item.completed}</td>\n          <td>{btnDel(item.id)}</td>\n        </tr>\n\n      );\n    });\n    return (\n      <Fragment>\n        <Navbar />\n        <table>\n          <tbody>\n            {dispData}\n\n          </tbody>\n        </table>\n        <button onClick={() => this.addTaskHandler()}>Add Task</button>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    email: state.emailReducer.userEmail,\n    pas: state.passReducer.userPas\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onPasSave: (pas) => {\n      dispatch({\n        type: actionTypes.Password,\n        payload: pas\n      })\n    },\n    onEmailSave: (email) => {\n      dispatch({\n        type: actionTypes.Email,\n        payload: email\n      })\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(TaskPage));\n\n"]},"metadata":{},"sourceType":"module"}