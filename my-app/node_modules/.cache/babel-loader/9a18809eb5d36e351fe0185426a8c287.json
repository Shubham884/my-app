{"ast":null,"code":"var _jsxFileName = \"/home/sk/my-app/src/components/LoginPage.js\";\nimport React, { Component, Fragment } from \"react\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport * as actionTypes from '../store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleEmail = emailVal => {\n      const {\n        onEmailSave\n      } = this.props;\n      onEmailSave(emailVal);\n    };\n\n    this.handleEmail = pasVal => {\n      const {\n        onPasSave\n      } = this.props;\n      onPasSave(pasVal);\n    };\n  }\n\n  render() {\n    const {\n      email,\n      pas\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            autoComplete: \"off\",\n            value: email,\n            onChange: e => this.handleEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"passwrod\",\n            id: \"password\",\n            autoComplete: \"off\",\n            value: pas,\n            onChange: e => this.handlePas(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log('state', state);\n  return {\n    email: state.emailReducer.userEmail,\n    pas: state.passReducer.userPas\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onPasSave: pas => {\n      dispatch({\n        type: actionTypes.Password,\n        payload: pas\n      });\n    },\n    onEmailSave: email => {\n      dispatch({\n        type: actionTypes.Email,\n        payload: email\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(LoginPage));","map":{"version":3,"sources":["/home/sk/my-app/src/components/LoginPage.js"],"names":["React","Component","Fragment","Navbar","connect","withRouter","actionTypes","LoginPage","handleEmail","emailVal","onEmailSave","props","pasVal","onPasSave","render","email","pas","e","target","value","handlePas","mapStateToProps","state","console","log","emailReducer","userEmail","passReducer","userPas","mapDispatchToProps","dispatch","type","Password","payload","Email"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom'\nimport * as actionTypes from '../store/actions'\n\n\nclass LoginPage extends Component {\n\n  handleEmail = (emailVal) => {\n    const { onEmailSave } = this.props\n    onEmailSave(emailVal)\n  }\n\n  handleEmail = (pasVal) => {\n    const { onPasSave } = this.props\n    onPasSave(pasVal)\n  }\n\n  render() {\n    const { email, pas } = this.props\n    return (\n      <Fragment>\n        {/* <Navbar /> */}\n        <form action=\"\">\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              autoComplete=\"off\"\n              value={email}\n              onChange={(e) => this.handleEmail(e.target.value)}\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"passwrod\"\n              id=\"password\"\n              autoComplete=\"off\"\n              value={pas} onChange={(e) => this.handlePas(e.target.value)}\n              required\n            />\n          </div>\n\n          <button type=\"submit\">Login</button>\n        </form>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log('state', state)\n  return {\n    email: state.emailReducer.userEmail,\n    pas: state.passReducer.userPas\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onPasSave: (pas) => {\n      dispatch({\n        type: actionTypes.Password,\n        payload: pas\n      })\n    },\n    onEmailSave: (email) => {\n      dispatch({\n        type: actionTypes.Email,\n        payload: email\n      })\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(LoginPage));\n\n"]},"metadata":{},"sourceType":"module"}